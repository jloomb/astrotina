var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};

// src/index.ts
__export(exports, {
  viteBuild: () => viteBuild
});
var import_fs_extra = __toModule(require("fs-extra"));
var import_path2 = __toModule(require("path"));
var import_vite = __toModule(require("vite"));
var import_plugin_react = __toModule(require("@vitejs/plugin-react"));

// src/tailwind.ts
var import_tailwindcss = __toModule(require("tailwindcss"));
var import_postcss_nested = __toModule(require("postcss-nested/index.js"));
var import_nesting = __toModule(require("tailwindcss/nesting/index.js"));
var import_defaultTheme = __toModule(require("tailwindcss/defaultTheme.js"));
var import_typography = __toModule(require("@tailwindcss/typography"));
var import_line_clamp = __toModule(require("@tailwindcss/line-clamp"));
var import_aspect_ratio = __toModule(require("@tailwindcss/aspect-ratio"));
var import_path = __toModule(require("path"));
var viteTina = () => {
  return {
    name: "vite-plugin-tina",
    config: (viteConfig) => {
      const plugins = [];
      const content = [
        import_path.default.join(__dirname, "../appFiles/src/**/*.{vue,js,ts,jsx,tsx,svelte}"),
        import_path.default.join(viteConfig.root, "../prebuild/config.js")
      ];
      const tw = (0, import_tailwindcss.default)({
        important: ".tina-tailwind",
        theme: {
          columns: {
            auto: "auto",
            1: "1",
            2: "2",
            3: "3",
            4: "4",
            5: "5",
            6: "6",
            7: "7",
            8: "8",
            9: "9",
            10: "10",
            11: "11",
            12: "12",
            "3xs": "256px",
            "2xs": "288px",
            xs: "320px",
            sm: "384px",
            md: "448px",
            lg: "512px",
            xl: "576px",
            "2xl": "672px",
            "3xl": "768px",
            "4xl": "896px",
            "5xl": "1024px",
            "6xl": "1152px",
            "7xl": "1280px"
          },
          spacing: {
            px: "1px",
            0: "0px",
            0.5: "2px",
            1: "4px",
            1.5: "6px",
            2: "8px",
            2.5: "10px",
            3: "12px",
            3.5: "14px",
            4: "16px",
            5: "20px",
            6: "24px",
            7: "28px",
            8: "32px",
            9: "36px",
            10: "40px",
            11: "44px",
            12: "48px",
            14: "56px",
            16: "64px",
            18: "72px",
            20: "80px",
            24: "96px",
            28: "114px",
            32: "128px",
            36: "144px",
            40: "160px",
            44: "176px",
            48: "192px",
            52: "208px",
            56: "224px",
            60: "240px",
            64: "256px",
            72: "288px",
            80: "320px",
            96: "384px"
          },
          borderRadius: {
            none: "0px",
            sm: "2px",
            DEFAULT: "4px",
            md: "6px",
            lg: "8px",
            xl: "12px",
            "2xl": "16px",
            "3xl": "24px",
            full: "9999px"
          },
          borderWidth: {
            DEFAULT: "1px",
            0: "0",
            2: "2px",
            3: "3px",
            4: "4px",
            6: "6px",
            8: "8px"
          },
          fontSize: {
            xs: ["13px", { lineHeight: "1.33" }],
            sm: ["14px", { lineHeight: "1.43" }],
            base: ["16px", { lineHeight: "1.5" }],
            md: ["16px", { lineHeight: "1.5" }],
            lg: ["18px", { lineHeight: "1.55" }],
            xl: ["20px", { lineHeight: "1.4" }],
            "2xl": ["24px", { lineHeight: "1.33" }],
            "3xl": ["30px", { lineHeight: "1.2" }],
            "4xl": ["36px", { lineHeight: "1.1" }],
            "5xl": ["48px", { lineHeight: "1" }],
            "6xl": ["60px", { lineHeight: "1" }],
            "7xl": ["72px", { lineHeight: "1" }],
            "8xl": ["96px", { lineHeight: "1" }],
            "9xl": ["128px", { lineHeight: "1" }]
          },
          opacity: {
            0: "0",
            5: ".05",
            7: ".07",
            10: ".1",
            15: ".15",
            20: ".2",
            25: ".25",
            30: ".3",
            40: ".4",
            50: ".5",
            60: ".6",
            70: ".7",
            75: ".75",
            80: ".8",
            90: ".9",
            100: "1"
          },
          zIndex: {
            "-1": "-1",
            base: "9000",
            panel: "9400",
            menu: "9800",
            chrome: "10200",
            overlay: "10600",
            modal: "10800",
            0: "0",
            10: "10",
            20: "20",
            30: "30",
            40: "40",
            25: "25",
            50: "50",
            75: "75",
            100: "100",
            auto: "auto"
          },
          extend: {
            scale: {
              97: ".97",
              103: "1.03"
            },
            transitionDuration: {
              0: "0ms",
              2e3: "2000ms"
            },
            boxShadow: {
              xs: "0 0 0 1px rgba(0, 0, 0, 0.05)",
              outline: "0 0 0 3px rgba(66, 153, 225, 0.5)"
            },
            colors: {
              blue: {
                50: "#DCEEFF",
                100: "#B4DBFF",
                200: "#85C5FE",
                300: "#4EABFE",
                400: "#2296fe",
                500: "#0084FF",
                600: "#0574e4",
                700: "#0D5DBD",
                800: "#144696",
                900: "#1D2C6C",
                1e3: "#241748"
              },
              gray: {
                50: "#F6F6F9",
                100: "#EDECF3",
                150: "#E6E3EF",
                200: "#E1DDEC",
                250: "#C9C5D5",
                300: "#b2adbe",
                400: "#918c9e",
                500: "#716c7f",
                600: "#565165",
                700: "#433e52",
                800: "#363145",
                900: "#252336",
                1e3: "#1c1b2e"
              },
              orange: {
                400: "#EB6337",
                500: "#EC4815",
                600: "#DC4419"
              }
            },
            fontFamily: {
              sans: ["Inter", ...import_defaultTheme.default.fontFamily.sans]
            },
            lineHeight: {
              3: "12px",
              4: "16px",
              5: "20px",
              6: "24px",
              7: "28px",
              8: "32px",
              9: "36px",
              10: "40px"
            },
            maxWidth: {
              form: "900px"
            },
            screens: {
              xs: "320px",
              sm: "560px",
              md: "720px",
              lg: "1030px"
            }
          }
        },
        content,
        plugins: [
          (0, import_typography.default)({ className: "tina-prose" }),
          import_line_clamp.default,
          import_aspect_ratio.default
        ]
      });
      plugins.push(import_nesting.default);
      plugins.push(import_postcss_nested.default);
      plugins.push(tw);
      return {
        css: {
          postcss: {
            plugins
          }
        }
      };
    }
  };
};

// src/html.ts
var devHTML = `<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>TinaCMS</title>
  </head>

  <!-- if development -->
  <script type="module">
    import RefreshRuntime from 'http://localhost:5173/@react-refresh'
    RefreshRuntime.injectIntoGlobalHook(window)
    window.$RefreshReg$ = () => {}
    window.$RefreshSig$ = () => (type) => type
    window.__vite_plugin_react_preamble_installed__ = true
  <\/script>
  <script type="module" src="http://localhost:5173/@vite/client"><\/script>
  <script
    type="module"
    src="http://localhost:5173/INSERT_OUTPUT_FOLDER_NAME/src/main.tsx"
  ><\/script>
  <body class="tina-tailwind">
    <div id="root"></div>
  </body>
</html>`;
var prodHTML = `<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>TinaCMS</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"><\/script>
  </body>
</html>
`;

// src/index.ts
var server;
var hasCopiedFiles = false;
var viteBuild = async ({
  rootPath,
  outputFolder,
  publicFolder,
  local: l,
  apiUrl,
  host
}) => {
  const local = l;
  const localBuild = l;
  const node_env = JSON.stringify(process.env.NODE_ENV);
  const generatedPath = import_path2.default.join(rootPath, ".tina", "__generated__");
  const outputPath = import_path2.default.join(rootPath, publicFolder, outputFolder);
  const appCopyPath = import_path2.default.join(__dirname, "..", "appFiles");
  const appRootPath = import_path2.default.join(generatedPath, "app");
  const devHTMLPath = import_path2.default.join(outputPath, "index.html");
  const prodHTMLPath = import_path2.default.join(appRootPath, "index.html");
  const configPath = import_path2.default.join(rootPath, ".tina", "config");
  const configPrebuildPath = import_path2.default.join(generatedPath, "prebuild", "config.js");
  const prebuildConfig = {
    root: import_path2.default.join(generatedPath, "prebuild"),
    esbuild: {
      target: "es2020"
    },
    mode: local ? "development" : "production",
    build: {
      outDir: import_path2.default.join(generatedPath, "prebuild"),
      lib: {
        entry: configPath,
        fileName: () => {
          return "config.js";
        },
        formats: ["es"]
      },
      rollupOptions: {
        external: ["react", "react-dom", "tinacms", "next"]
      }
    },
    logLevel: "silent"
  };
  if (!hasCopiedFiles) {
    import_fs_extra.default.remove(import_path2.default.join(generatedPath, "prebuild"));
    import_fs_extra.default.remove(import_path2.default.join(generatedPath, "app"));
  }
  await (0, import_vite.build)(prebuildConfig);
  const alias = {
    TINA_IMPORT: configPrebuildPath
  };
  const config = {
    root: appRootPath,
    base: `/${outputFolder}/`,
    mode: local ? "development" : "production",
    plugins: [(0, import_vite.splitVendorChunkPlugin)(), (0, import_plugin_react.default)(), viteTina()],
    define: {
      "process.env": `new Object(${JSON.stringify(process.env)})`,
      __API_URL__: `"${apiUrl}"`
    },
    esbuild: {
      target: "es2020"
    },
    server: {
      host,
      port: 5173,
      fs: {
        strict: false
      }
    },
    resolve: {
      alias,
      dedupe: process.env.MONOREPO_DEV ? ["graphql", "tinacms", "@tinacms/toolkit"] : ["graphql"]
    },
    build: {
      sourcemap: true,
      outDir: outputPath,
      emptyOutDir: false
    },
    logLevel: "silent"
  };
  if (!hasCopiedFiles) {
    if (process.env.MONOREPO_DEV) {
      console.warn("Using monorepo dev mode, source files will be symlinked");
      await import_fs_extra.default.createSymlink(appCopyPath, appRootPath, "dir");
    } else {
      await import_fs_extra.default.copy(appCopyPath, appRootPath);
    }
    await import_fs_extra.default.outputFile(import_path2.default.join(outputPath, ".gitignore"), `index.html
assets/`);
  }
  if (localBuild) {
    if (!hasCopiedFiles) {
      const replaceAll = (string, target, value) => {
        const regex = new RegExp(target, "g");
        return string.valueOf().replace(regex, value);
      };
      await import_fs_extra.default.outputFile(devHTMLPath, replaceAll(devHTML, "INSERT_OUTPUT_FOLDER_NAME", outputFolder));
    }
    if (!server) {
      server = await (0, import_vite.createServer)(config);
      await server.listen();
    }
    hasCopiedFiles = true;
  } else {
    await import_fs_extra.default.outputFile(prodHTMLPath, prodHTML);
    await (0, import_vite.build)(config);
  }
  if (!node_env) {
    delete process.env.NODE_ENV;
  } else {
    process.env.NODE_ENV = node_env;
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  viteBuild
});
