/**
Copyright 2021 Forestry.io Holdings, Inc.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
export * from './internalClient';
export * from './auth';
export * from './utils';
export * from './tina-cms';
export { useGraphqlForms } from './hooks/use-graphql-forms';
export { useDocumentCreatorPlugin } from './hooks/use-content-creator';
export * from '@tinacms/toolkit';
export { TinaAdmin } from './admin';
export { RouteMappingPlugin } from './admin/plugins/route-mapping';
export { TinaAdminApi } from './admin/api';
export { MdxFieldPluginExtendible } from '@tinacms/toolkit';
import { TinaCMSProvider2, DocumentCreatorCallback } from './tina-cms';
import type { TinaCMSProviderDefaultProps } from './types/cms';
export type { TinaCMSProviderDefaultProps };
export default TinaCMSProvider2;
import { TinaCMS } from '@tinacms/toolkit';
import { formifyCallback } from './hooks/use-graphql-forms';
export { NAMER, resolveForm } from '@tinacms/schema-tools';
import type { Config, SchemaField, Schema, Collection, Template } from '@tinacms/schema-tools/dist/types';
export type { Config, Schema, Collection, Template, SchemaField };
/**
 * @deprecated use `SchemaField` instead
 */
export declare type TinaFieldEnriched = SchemaField;
/**
 * @deprecated use `SchemaField` instead
 */
export declare type TinaField = SchemaField;
/**
 * @deprecated use `Template` instead
 */
export declare type TinaTemplate = Template;
/**
 * @deprecated use `Template` instead
 */
export declare type Templateable = Template;
/**
 * @deprecated use `Template` instead
 */
export declare type TinaCloudTemplatebase = Template;
/**
 * @deprecated use `Collection` instead
 */
export declare type TinaCloudCollection = Collection;
/**
 * @deprecated use `Collection` instead
 */
export declare type TinaCollection = Collection;
/**
 * @deprecated use `Schema` instead
 */
export declare type TinaSchema = Schema;
/**
 * @deprecated use `Schema` instead
 */
export declare type TinaCloudSchema = Schema;
export declare const defineSchema: (config: Schema) => Schema;
export declare const defineLegacyConfig: (config: Omit<TinaCMSProviderDefaultProps, 'children'>) => Omit<TinaCMSProviderDefaultProps, "children">;
export declare const defineStaticConfig: (config: Config<(cms: TinaCMS) => TinaCMS, formifyCallback, import("./hooks/use-content-creator").DocumentCreatorArgs, undefined>) => Config<(cms: TinaCMS) => TinaCMS, formifyCallback, import("./hooks/use-content-creator").DocumentCreatorArgs, undefined>;
export declare const defineConfig: (config: Config<(cms: TinaCMS) => TinaCMS, formifyCallback, import("./hooks/use-content-creator").DocumentCreatorArgs, undefined>) => Config<(cms: TinaCMS) => TinaCMS, formifyCallback, import("./hooks/use-content-creator").DocumentCreatorArgs, undefined>;
